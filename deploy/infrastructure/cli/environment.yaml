name: AzureDevelopmentEnvironment
location: ${location}

parameters:
  resourceGroupPrefix:
    type: string
    default: "miyagi1"
    description: Prefix for the resource group names.
  location:
    type: string
    default: "eastus"
    description: Location for the resources.
  resourceGroupCount:
    type: int
    default: 1
    description: Number of resource groups to create.
  subscriptionId:
    type: string
    description: Subscription ID for the deployment.
  deploymentType:
    type: string
    default: "aks"
    description: Type of deployment.
  owner:
    type: string
    default: "default"
    description: Owner of the resources.
  skipRg:
    type: string
    default: "false"
    description: Skip resource group creation.
  skipOpenAI:
    type: string
    default: "false"
    description: Skip OpenAI resource creation.
  skipEmbeddingModelDeployment:
    type: string
    default: "false"
    description: Skip embedding model deployment.
  skipCompletionModelDeployment:
    type: string
    default: "false"
    description: Skip completion model deployment.
  skipcognitiveSearch:
    type: string
    default: "false"
    description: Skip cognitive search resource creation.
  skipCosmosDB:
    type: string
    default: "false"
    description: Skip Cosmos DB resource creation.
  skipBlobStorage:
    type: string
    default: "false"
    description: Skip Blob Storage resource creation.
  skipAzureContainerApps:
    type: string
    default: "false"
    description: Skip Azure Container Apps resource creation.
  skipAKS:
    type: string
    default: "false"
    description: Skip AKS resource creation.
  skipAzureContainerRegistry:
    type: string
    default: "false"
    description: Skip Azure Container Registry resource creation.
  skipAPIM:
    type: string
    default: "false"
    description: Skip API Management resource creation.
  uniqueSuffix:
    type: string
    description: Unique suffix for resource names.
  servicePrincipalClientId:
    type: string
    description: Service Principal Client ID for AKS.
  servicePrincipalClientSecret:
    type: string
    description: Service Principal Client Secret for AKS.

resources:
  - type: Microsoft.Resources/resourceGroups
    apiVersion: 2021-04-01
    condition: "[equals(parameters('skipRg'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    properties: {}

  # OpenAI Service
  - type: Microsoft.CognitiveServices/accounts
    apiVersion: 2021-04-30
    condition: "[equals(parameters('skipOpenAI'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-OpenAIService-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    properties:
      kind: "OpenAI"
      sku:
        name: "S0"
      customSubDomainName: "[concat(parameters('resourceGroupPrefix'), '-OpenAIService-', parameters('uniqueSuffix'))]"
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"

  # Embedding Model Deployment
  - type: Microsoft.CognitiveServices/accounts/deployments
    apiVersion: 2021-04-30
    condition: "[equals(parameters('skipEmbeddingModelDeployment'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-EmbeddingModel-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    properties:
      modelName: "text-embedding-ada-002"
      modelVersion: "2"
      modelFormat: "OpenAI"
      scaleCapacity: 20
      capacity: 20
    dependsOn:
      - "[resourceId('Microsoft.CognitiveServices/accounts', concat(parameters('resourceGroupPrefix'), '-OpenAIService-', parameters('uniqueSuffix')))]"

  # Completion Model Deployment
  - type: Microsoft.CognitiveServices/accounts/deployments
    apiVersion: 2021-04-30
    condition: "[equals(parameters('skipCompletionModelDeployment'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-CompletionModel-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    properties:
      modelName: "gpt-35-turbo"
      modelVersion: "0613"
      modelFormat: "OpenAI"
      capacity: 30
    dependsOn:
      - "[resourceId('Microsoft.CognitiveServices/accounts', concat(parameters('resourceGroupPrefix'), '-OpenAIService-', parameters('uniqueSuffix')))]"

  # Cosmos DB Account
  - type: Microsoft.DocumentDB/databaseAccounts
    apiVersion: 2021-04-15
    condition: "[equals(parameters('skipCosmosDB'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-cosmos-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    properties:
      databaseAccountOfferType: Standard
      locations:
        - locationName: "[parameters('location')]"
          failoverPriority: 0
      kind: GlobalDocumentDB
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"

  # Cosmos DB SQL Database
  - type: Microsoft.DocumentDB/databaseAccounts/sqlDatabases
    apiVersion: 2021-04-15
    condition: "[equals(parameters('skipCosmosDB'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-cosmos-', parameters('uniqueSuffix'), '/miyagi')]"
    dependsOn:
      - "[resourceId('Microsoft.DocumentDB/databaseAccounts', concat(parameters('resourceGroupPrefix'), '-cosmos-', parameters('uniqueSuffix')))]"
    properties:
      resource:
        id: miyagi

  # Cosmos DB SQL Container
  - type: Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers
    apiVersion: 2021-04-15
    condition: "[equals(parameters('skipCosmosDB'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-cosmos-', parameters('uniqueSuffix'), '/miyagi/recommendations')]"
    dependsOn:
      - "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', concat(parameters('resourceGroupPrefix'), '-cosmos-', parameters('uniqueSuffix'), '/miyagi'))]"
    properties:
      resource:
        id: recommendations
        partitionKey:
          paths:
            - /partitionKey
          kind: Hash

  # Azure Storage Account
  - type: Microsoft.Storage/storageAccounts
    apiVersion: 2021-04-01
    condition: "[equals(parameters('skipBlobStorage'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-storage-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    sku:
      name: Standard_LRS
    kind: StorageV2
    properties:
      accessTier: Hot
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"

  # Azure Storage Blob Container
  - type: Microsoft.Storage/storageAccounts/blobServices/containers
    apiVersion: 2021-04-01
    condition: "[equals(parameters('skipBlobStorage'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-storage-', parameters('uniqueSuffix'), '/default/miyagi')]"
    dependsOn:
      - "[resourceId('Microsoft.Storage/storageAccounts', concat(parameters('resourceGroupPrefix'), '-storage-', parameters('uniqueSuffix')))]"
    properties:
      publicAccess: None

  # Azure Container Registry
  - type: Microsoft.ContainerRegistry/registries
    apiVersion: 2021-09-01
    condition: "[equals(parameters('skipAzureContainerRegistry'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-acr-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    sku:
      name: Basic
    properties: {}
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"

  # Azure Container App
  - type: Microsoft.App/containerApps
    apiVersion: 2022-01-01-preview
    condition: "[equals(parameters('skipAzureContainerApps'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-containerapp-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    properties:
      managedEnvironmentId: "[resourceId('Microsoft.App/managedEnvironments', concat(parameters('resourceGroupPrefix'), '-env'))]"
      configuration:
        ingress:
          external: true
          targetPort: 80
      template:
        containers:
          - name: "[concat(parameters('resourceGroupPrefix'), '-containerapp-', parameters('uniqueSuffix'))]"
            image: "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest"
            resources:
              cpu: 0.5
              memory: 1.0Gi
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"
      - "[resourceId('Microsoft.App/managedEnvironments', concat(parameters('resourceGroupPrefix'), '-env'))]"

  # AKS Cluster
  - type: Microsoft.ContainerService/managedClusters
    apiVersion: 2021-05-01
    condition: "[equals(parameters('skipAKS'), 'false')]"
    name: "[concat(parameters('resourceGroupPrefix'), '-aks-', parameters('uniqueSuffix'))]"
    location: "[parameters('location')]"
    properties:
      kubernetesVersion: "1.21.2"  # You can specify the desired Kubernetes version here
      dnsPrefix: "[concat(parameters('resourceGroupPrefix'), '-dns-', parameters('uniqueSuffix'))]"
      networkProfile:
        networkPlugin: azure
        networkPluginMode: overlay
        podCidr: "192.168.0.0/16"
      servicePrincipalProfile:
        clientId: "[parameters('servicePrincipalClientId')]"  # Add this parameter to your parameters section
        secret: "[parameters('servicePrincipalClientSecret')]"  # Add this parameter to your parameters section
      addonProfiles:
        azurePolicy:
          enabled: true
      agentPoolProfiles:
        - name: agentpool
          count: 3
          vmSize: Standard_DS2_v2
          osType: Linux
      enableRBAC: true
      attachACR: "[resourceId('Microsoft.ContainerRegistry/registries', concat(parameters('resourceGroupPrefix'), '-acr-', parameters('uniqueSuffix')))]"
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"
      - "[resourceId('Microsoft.ContainerRegistry/registries', concat(parameters('resourceGroupPrefix'), '-acr-', parameters('uniqueSuffix')))]"

 # Event Hub Namespace
  - type: Microsoft.EventHub/namespaces
    apiVersion: 2023-01-01-preview
    condition: "[equals(parameters('skipEventHub'), 'false')]"
    name: "[parameters('eventHubNamespaceName')]"
    location: "[parameters('location')]"
    sku:
      name: 'Basic'
      tier: 'Basic'
      capacity: 1
    properties:
      minimumTlsVersion: '1.2'
      publicNetworkAccess: 'Enabled'
      disableLocalAuth: false
      zoneRedundant: true
      isAutoInflateEnabled: false
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"

  # Event Hub
  - type: Microsoft.EventHub/namespaces/eventhubs
    apiVersion: 2023-01-01-preview
    condition: "[equals(parameters('skipEventHub'), 'false')]"
    name: "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName'))]"
    properties:
      retentionDescription:
        cleanupPolicy: 'Delete'
        retentionTimeInHours: 1
      messageRetentionInDays: 1
      partitionCount: 2
      status: 'Active'
    dependsOn:
      - "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"

  # Event Hub Diagnostic Settings
  - type: Microsoft.EventHub/namespaces/eventhubs
    apiVersion: 2023-01-01-preview
    condition: "[equals(parameters('skipEventHub'), 'false')]"
    name: "[concat(parameters('eventHubNamespaceName'), '/insights-metrics-pt1m')]"
    properties:
      retentionDescription:
        cleanupPolicy: 'Delete'
        retentionTimeInHours: 1
      messageRetentionInDays: 1
      partitionCount: 2
      status: 'Active'
    dependsOn:
      - "[resourceId('Microsoft.EventHub/namespaces', parameters('eventHubNamespaceName'))]"

  # Event Hub Authorization Rule
  - type: Microsoft.EventHub/namespaces/eventhubs/authorizationRules
    apiVersion: 2022-10-01-preview
    condition: "[equals(parameters('skipEventHub'), 'false')]"
    name: "[concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName'), '/apimLoggerAccessPolicy')]"
    properties:
      rights:
        - 'Send'
    dependsOn:
      - "[resourceId('Microsoft.EventHub/namespaces/eventhubs', concat(parameters('eventHubNamespaceName'), '/', parameters('eventHubName')))]"


  # API Management Service
  - type: Microsoft.ApiManagement/service
    apiVersion: 2023-05-01-preview
    condition: "[equals(parameters('skipAPIM'), 'false')]"
    name: "[parameters('apiManagementName')]"
    location: "[parameters('location')]"
    sku:
      name: 'Developer'
      capacity: 1
    identity:
      type: 'SystemAssigned'
    properties:
      publisherEmail: 'admin@contoso.com'
      publisherName: 'ContosoAdmin'
      apiVersionConstraint: {}
      developerPortalStatus: 'Disabled'
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"


  # Cognitive Search Service
  - type: Microsoft.Search/searchServices
    apiVersion: 2021-04-01-Preview
    condition: "[equals(parameters('skipcognitiveSearch'), 'false')]"
    name: "[parameters('searchServiceName')]"
    location: "[parameters('location')]"
    properties:
      semanticSearch: 'free'
    sku:
      name: "standard"
    dependsOn:
      - "[resourceId('Microsoft.Resources/resourceGroups', concat(parameters('resourceGroupPrefix'), '-rg-', parameters('uniqueSuffix')))]"